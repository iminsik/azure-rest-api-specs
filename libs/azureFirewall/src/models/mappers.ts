/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as msRest from "@azure/ms-rest-js";


export const SubResource: msRest.CompositeMapper = {
  serializedName: "SubResource",
  type: {
    name: "Composite",
    className: "SubResource",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureFirewallIPConfiguration: msRest.CompositeMapper = {
  serializedName: "AzureFirewallIPConfiguration",
  type: {
    name: "Composite",
    className: "AzureFirewallIPConfiguration",
    modelProperties: {
      ...SubResource.type.modelProperties,
      privateIPAddress: {
        readOnly: true,
        serializedName: "properties.privateIPAddress",
        type: {
          name: "String"
        }
      },
      subnet: {
        serializedName: "properties.subnet",
        type: {
          name: "Composite",
          className: "SubResource"
        }
      },
      publicIPAddress: {
        serializedName: "properties.publicIPAddress",
        type: {
          name: "Composite",
          className: "SubResource"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      etag: {
        readOnly: true,
        serializedName: "etag",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureFirewallPublicIPAddress: msRest.CompositeMapper = {
  serializedName: "AzureFirewallPublicIPAddress",
  type: {
    name: "Composite",
    className: "AzureFirewallPublicIPAddress",
    modelProperties: {
      address: {
        serializedName: "address",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureFirewallIpGroups: msRest.CompositeMapper = {
  serializedName: "AzureFirewallIpGroups",
  type: {
    name: "Composite",
    className: "AzureFirewallIpGroups",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      changeNumber: {
        readOnly: true,
        serializedName: "changeNumber",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HubPublicIPAddresses: msRest.CompositeMapper = {
  serializedName: "HubPublicIPAddresses",
  type: {
    name: "Composite",
    className: "HubPublicIPAddresses",
    modelProperties: {
      addresses: {
        required: true,
        serializedName: "addresses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureFirewallPublicIPAddress"
            }
          }
        }
      },
      count: {
        required: true,
        serializedName: "count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const HubIPAddresses: msRest.CompositeMapper = {
  serializedName: "HubIPAddresses",
  type: {
    name: "Composite",
    className: "HubIPAddresses",
    modelProperties: {
      publicIPs: {
        serializedName: "publicIPs",
        type: {
          name: "Composite",
          className: "HubPublicIPAddresses"
        }
      },
      privateIPAddress: {
        serializedName: "privateIPAddress",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureFirewallRCAction: msRest.CompositeMapper = {
  serializedName: "AzureFirewallRCAction",
  type: {
    name: "Composite",
    className: "AzureFirewallRCAction",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureFirewallApplicationRuleProtocol: msRest.CompositeMapper = {
  serializedName: "AzureFirewallApplicationRuleProtocol",
  type: {
    name: "Composite",
    className: "AzureFirewallApplicationRuleProtocol",
    modelProperties: {
      protocolType: {
        serializedName: "protocolType",
        type: {
          name: "String"
        }
      },
      port: {
        serializedName: "port",
        constraints: {
          InclusiveMaximum: 64000,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AzureFirewallApplicationRule: msRest.CompositeMapper = {
  serializedName: "AzureFirewallApplicationRule",
  type: {
    name: "Composite",
    className: "AzureFirewallApplicationRule",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      sourceAddresses: {
        serializedName: "sourceAddresses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      protocols: {
        serializedName: "protocols",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureFirewallApplicationRuleProtocol"
            }
          }
        }
      },
      targetFqdns: {
        serializedName: "targetFqdns",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      fqdnTags: {
        serializedName: "fqdnTags",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      sourceIpGroups: {
        serializedName: "sourceIpGroups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const AzureFirewallApplicationRuleCollection: msRest.CompositeMapper = {
  serializedName: "AzureFirewallApplicationRuleCollection",
  type: {
    name: "Composite",
    className: "AzureFirewallApplicationRuleCollection",
    modelProperties: {
      ...SubResource.type.modelProperties,
      priority: {
        serializedName: "properties.priority",
        constraints: {
          InclusiveMaximum: 65000,
          InclusiveMinimum: 100
        },
        type: {
          name: "Number"
        }
      },
      action: {
        serializedName: "properties.action",
        type: {
          name: "Composite",
          className: "AzureFirewallRCAction"
        }
      },
      rules: {
        serializedName: "properties.rules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureFirewallApplicationRule"
            }
          }
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      etag: {
        readOnly: true,
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureFirewallNatRCAction: msRest.CompositeMapper = {
  serializedName: "AzureFirewallNatRCAction",
  type: {
    name: "Composite",
    className: "AzureFirewallNatRCAction",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureFirewallNatRule: msRest.CompositeMapper = {
  serializedName: "AzureFirewallNatRule",
  type: {
    name: "Composite",
    className: "AzureFirewallNatRule",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      sourceAddresses: {
        serializedName: "sourceAddresses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      destinationAddresses: {
        serializedName: "destinationAddresses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      destinationPorts: {
        serializedName: "destinationPorts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      protocols: {
        serializedName: "protocols",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      translatedAddress: {
        serializedName: "translatedAddress",
        type: {
          name: "String"
        }
      },
      translatedPort: {
        serializedName: "translatedPort",
        type: {
          name: "String"
        }
      },
      translatedFqdn: {
        serializedName: "translatedFqdn",
        type: {
          name: "String"
        }
      },
      sourceIpGroups: {
        serializedName: "sourceIpGroups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const AzureFirewallNatRuleCollection: msRest.CompositeMapper = {
  serializedName: "AzureFirewallNatRuleCollection",
  type: {
    name: "Composite",
    className: "AzureFirewallNatRuleCollection",
    modelProperties: {
      ...SubResource.type.modelProperties,
      priority: {
        serializedName: "properties.priority",
        constraints: {
          InclusiveMaximum: 65000,
          InclusiveMinimum: 100
        },
        type: {
          name: "Number"
        }
      },
      action: {
        serializedName: "properties.action",
        type: {
          name: "Composite",
          className: "AzureFirewallNatRCAction"
        }
      },
      rules: {
        serializedName: "properties.rules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureFirewallNatRule"
            }
          }
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      etag: {
        readOnly: true,
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureFirewallNetworkRule: msRest.CompositeMapper = {
  serializedName: "AzureFirewallNetworkRule",
  type: {
    name: "Composite",
    className: "AzureFirewallNetworkRule",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      protocols: {
        serializedName: "protocols",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      sourceAddresses: {
        serializedName: "sourceAddresses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      destinationAddresses: {
        serializedName: "destinationAddresses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      destinationPorts: {
        serializedName: "destinationPorts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      destinationFqdns: {
        serializedName: "destinationFqdns",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      sourceIpGroups: {
        serializedName: "sourceIpGroups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      destinationIpGroups: {
        serializedName: "destinationIpGroups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const AzureFirewallNetworkRuleCollection: msRest.CompositeMapper = {
  serializedName: "AzureFirewallNetworkRuleCollection",
  type: {
    name: "Composite",
    className: "AzureFirewallNetworkRuleCollection",
    modelProperties: {
      ...SubResource.type.modelProperties,
      priority: {
        serializedName: "properties.priority",
        constraints: {
          InclusiveMaximum: 65000,
          InclusiveMinimum: 100
        },
        type: {
          name: "Number"
        }
      },
      action: {
        serializedName: "properties.action",
        type: {
          name: "Composite",
          className: "AzureFirewallRCAction"
        }
      },
      rules: {
        serializedName: "properties.rules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureFirewallNetworkRule"
            }
          }
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      etag: {
        readOnly: true,
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureFirewallSku: msRest.CompositeMapper = {
  serializedName: "AzureFirewallSku",
  type: {
    name: "Composite",
    className: "AzureFirewallSku",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      tier: {
        required: true,
        serializedName: "tier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const AzureFirewall: msRest.CompositeMapper = {
  serializedName: "AzureFirewall",
  type: {
    name: "Composite",
    className: "AzureFirewall",
    modelProperties: {
      ...Resource.type.modelProperties,
      applicationRuleCollections: {
        serializedName: "properties.applicationRuleCollections",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureFirewallApplicationRuleCollection"
            }
          }
        }
      },
      natRuleCollections: {
        serializedName: "properties.natRuleCollections",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureFirewallNatRuleCollection"
            }
          }
        }
      },
      networkRuleCollections: {
        serializedName: "properties.networkRuleCollections",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureFirewallNetworkRuleCollection"
            }
          }
        }
      },
      ipConfigurations: {
        serializedName: "properties.ipConfigurations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureFirewallIPConfiguration"
            }
          }
        }
      },
      managementIpConfiguration: {
        serializedName: "properties.managementIpConfiguration",
        type: {
          name: "Composite",
          className: "AzureFirewallIPConfiguration"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      threatIntelMode: {
        serializedName: "properties.threatIntelMode",
        type: {
          name: "String"
        }
      },
      virtualHub: {
        serializedName: "properties.virtualHub",
        type: {
          name: "Composite",
          className: "SubResource"
        }
      },
      firewallPolicy: {
        serializedName: "properties.firewallPolicy",
        type: {
          name: "Composite",
          className: "SubResource"
        }
      },
      hubIPAddresses: {
        serializedName: "properties.hubIPAddresses",
        type: {
          name: "Composite",
          className: "HubIPAddresses"
        }
      },
      ipGroups: {
        readOnly: true,
        serializedName: "properties.ipGroups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureFirewallIpGroups"
            }
          }
        }
      },
      sku: {
        required: true,
        serializedName: "properties.sku",
        type: {
          name: "Composite",
          className: "AzureFirewallSku"
        }
      },
      additionalProperties: {
        serializedName: "properties.additionalProperties",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      zones: {
        serializedName: "zones",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      etag: {
        readOnly: true,
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureFirewallListResult: msRest.CompositeMapper = {
  serializedName: "AzureFirewallListResult",
  type: {
    name: "Composite",
    className: "AzureFirewallListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureFirewall"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CloudErrorBody: msRest.CompositeMapper = {
  serializedName: "CloudErrorBody",
  type: {
    name: "Composite",
    className: "CloudErrorBody",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CloudErrorBody"
            }
          }
        }
      }
    }
  }
};

export const CloudError: msRest.CompositeMapper = {
  serializedName: "CloudError",
  type: {
    name: "Composite",
    className: "CloudError",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "CloudErrorBody"
        }
      }
    }
  }
};

export const TagsObject: msRest.CompositeMapper = {
  serializedName: "TagsObject",
  type: {
    name: "Composite",
    className: "TagsObject",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};
